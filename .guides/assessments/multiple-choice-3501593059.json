{
	"type": "multiple-choice",
	"taskId": "multiple-choice-3501593059",
	"source": {
		"name": "Chainlink Functions Use Case",
		"showName": false,
		"instructions": "Which of the following is a primary use case for Chainlink's Functions service?",
		"multipleResponse": false,
		"isRandomized": true,
		"answers": [
			{
				"_id": "130c628e-85ae-9aee-94d5-342315b14b76",
				"correct": true,
				"answer": "Executing custom off-chain computations and fetching data from any API"
			},
			{
				"_id": "a60601bb-fd8e-0983-e9ac-0251bae04450",
				"correct": false,
				"answer": "Providing high-frequency, low-latency market data updates"
			},
			{
				"_id": "715fa7f0-0acd-4c48-e693-d5c63d941ae9",
				"correct": false,
				"answer": "Generating verifiable random numbers for gaming applications"
			},
			{
				"_id": "c724f0be-12f4-ac6b-653e-15f590e7bc91",
				"correct": false,
				"answer": "Automating smart contract executions based on predefined conditions"
			},
			{
				"_id": "56c9d455-714f-470a-df08-d1cc915d54d7",
				"correct": false,
				"answer": "Supplying daily price feed updates for DeFi protocols"
			}
		],
		"guidance": "Chainlink's Functions service is designed as a 'serverless' developer platform that allows users to fetch data from any API and run custom, user-supplied code. This makes it ideal for executing custom off-chain computations and fetching data from any API. The other options are more suited to different Chainlink services: high-frequency, low-latency market data is provided by Data Streams, verifiable random numbers are generated by VRF (Verifiable Random Function), smart contract automation is handled by Automation (formerly Keepers), and daily price feed updates are typically provided by Data Feeds. Functions offers more flexibility and customization compared to these other services, allowing developers to write and execute their own off-chain code.",
		"showGuidanceAfterResponseOption": {
			"type": "Never"
		},
		"maxAttemptsCount": 1,
		"showExpectedAnswer": false,
		"points": 1,
		"incorrectPoints": 0,
		"arePartialPointsAllowed": false,
		"useMaximumScore": false,
		"metadata": {
			"tags": [
				{
					"name": "Assessment Type",
					"value": "Multiple Choice"
				},
				{
					"name": "Content",
					"value": "BFT"
				},
				{
					"name": "Programming Language",
					"value": "None"
				},
				{
					"name": "Lesson",
					"value": "Other Blockchains and Oracles"
				},
				{
					"name": "Topic",
					"value": "Chainlink Functions"
				},
				{
					"name": "Level",
					"value": "Easy"
				},
				{
					"name": "Exam",
					"value": "SG"
				},
				{
					"name": "Type",
					"value": "multiple response"
				}
			],
			"files": [],
			"opened": []
		},
		"bloomsObjectiveLevel": "4",
		"learningObjectives": "SWBAT identify appropriate use cases for Chainlink Functions and distinguish it from other Chainlink services"
	},
	"linkedId": "3a207d87-d574-4f50-995f-de3a24daa1aa",
	"libraryId": "3b61def1-4a5c-4d46-b6a5-3ac64cf98050",
	"version": 0
}